services:
  postgresql:
    image: bitnami/postgresql:16
    container_name: postgres
    user: "1000"
    #volumes:
    #  - '$PWD/docker/volume/postgres:/bitnami/postgresql'
    env_file:
      - .env
    networks:
      - default_network

  redis:
    image: bitnami/redis:7.0
    container_name: redis
    user: "1000"
    #volumes:
    #  - '$PWD/docker/volume/redis:/bitnami/redis/data'
    env_file:
      - .env
    networks:
      - default_network

  airflow-scheduler:
    image: bitnami/airflow-scheduler:2.9.1
    container_name: scheduler
    volumes:
      - '$PWD/dags:/opt/bitnami/airflow/dags'
    env_file:
      - .env
    networks:
      - default_network

  airflow-worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: worker
    volumes:
      - '$PWD/dags:/opt/bitnami/airflow/dags'
      - '$PWD/:/opt/bitnami/airflow/project'
    env_file:
      - .env
    networks:
      - default_network

  airflow:
    image: bitnami/airflow:2.9.1
    container_name: airflow
    env_file:
      - .env
    ports: ['8080:8080']
    networks:
      - default_network

  minio:
    image: bitnami/minio:2024.5.28
    container_name: minio
    healthcheck:
      interval: 1s
      retries: 20
      test:
        - CMD-SHELL
        - mc ready data && mc mb --ignore-existing data/caged
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - .env
    user: "1000"
    volumes:
      - $PWD/docker/config/minio.json:/.mc/config.json:ro
      - $PWD/docker/volume/minio:/bitnami/minio/data
    networks:
      - default_network


networks:
  default_network: